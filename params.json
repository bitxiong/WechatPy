{"name":"Wechatpy","tagline":"","body":"#A python interface to connect wechat public platform\r\n\r\n---------------------------------------\r\n\r\n##Features\r\n\r\n* Easy to install - just import class from python file\r\n* Updating - I will update frequently\r\n* Other function - Please contact me for other functional modules, for example sending message to user without call from wechat.\r\n\r\n----------------------------------------\r\n\r\n##Usage\r\n\r\nPut the file into your application folder, then call the interface according to your app framework. Generally, is you \r\nget the request XML file you should call the interface like\r\n\r\n```Python\r\nfrom wchooker import wcInfoHandler\r\nhandler = wcInfoHandler()\r\nresponseMsg = handler.respondMsg(rawStr) #rawStr is the raw xml from wechat platform\r\n```\r\n\r\nThen you should modify the file \"wcMsgProc.py\" as\r\n\r\n```Python\r\n#------------------processing---------------------------\r\n      if (wcMsg.msgType == MESSAGE_TEXT):\r\n      response = wcTextResponse()\r\n      response.resContent = wcMsg.msgContent\r\n      log(wcMsg.msgHost)\r\n           \r\n      #add yourselves' handling code here\r\n      #please see \"wcData.py\" for the structure of the class wcMsg\r\n      #The return content should be set to response.resContent\r\n#------------------------------------------------------\r\n      return response \r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}